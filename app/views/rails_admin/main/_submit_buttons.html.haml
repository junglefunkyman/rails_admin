.form-group.form-actions
  .col-sm-offset-2.col-sm-10
    %input{type: :hidden, name: 'return_to', value: (params[:return_to].presence || request.referer)}
    %button.btn.btn-primary{type: "submit", name: "_save", :'data-disable-with' => t("admin.form.save")}
      %i.icon-white.icon-ok
      = t("admin.form.save")
    %span.extra_buttons
      - if authorized? :new, @abstract_model
        %button.btn.btn-info{type: "submit", name: "_add_another", :'data-disable-with' => t("admin.form.save_and_add_another")}
          = t("admin.form.save_and_add_another")
      - if authorized? :edit, @abstract_model
        %button.btn.btn-info{type: "submit", name: "_add_edit", :'data-disable-with' => t("admin.form.save_and_edit")}
          = t("admin.form.save_and_edit")
      - if @object.respond_to?('skip_validation')
        %input.skip_validation{type: :hidden, name: @abstract_model.param_key + '[skip_validation]', value: true}
        %input.skip_validation{type: :hidden, name: 'complete_blood_count[leukocyte_count_attributes][skip_validation]', value: true}
        %button.btn.btn-danger{type: "submit", name: "_save_unverified", :'data-disable-with' => t("admin.form.save_unverified"), :formnovalidate => true}
          %i.icon-white.icon-exclamation-sign
          = t("admin.form.save_unverified")
      %button.btn{type: "submit", name: "_continue", :'data-disable-with' => t("admin.form.cancel"), :formnovalidate => true}
        %i.icon-remove
        = t("admin.form.cancel")
